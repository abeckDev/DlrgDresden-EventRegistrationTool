@layout RootLayout
@inherits LayoutComponentBase
@using System.Globalization
@using Blazorise.Localization
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<Layout>
  <LayoutHeader>
      <Bar Breakpoint="Breakpoint.Desktop" Background="Background.Primary" ThemeContrast="ThemeContrast.Light" >
        <BarBrand>
            <BarItem>
                <BarLink To="">
                    <Text Color="TextColor.Secondary" style="font-weight:bold">JHV  DLRG Dresden - Anmeldungsportal</Text>
                </BarLink>
            </BarItem>
        </BarBrand>
        <BarToggler />
        <BarMenu>
            <BarStart>
                <BarItem>
                    <BarLink  style="color:white" To="">Startseite</BarLink>
                </BarItem>
                <BarItem>
                    <BarLink  style="color:white" To="/registration">Anmeldung</BarLink>
                </BarItem>
            </BarStart>
            <BarEnd>
                <BarItem>
                    <BarLink  style="color:white" Clicked="@ShowModal"><Icon Name="IconName.User" /> Meine Anmeldung aufrufen</BarLink>
                </BarItem>
            </BarEnd>
        </BarMenu>
      </Bar>
  </LayoutHeader>
  <LayoutContent>
      @Body
  </LayoutContent>
  <LayoutFooter>
    DLRG Bezirk Dresden e. V. - 2021  - <a href="mailto:online-dienste@dresden.dlrg.de">Support kontaktieren</a>
  </LayoutFooter>
</Layout>

<Modal @ref="accountLookupRef">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Meine Registrierung aufrufen</ModalTitle>
            <CloseButton Clicked="@HideModal" />
        </ModalHeader>
        <ModalBody>
            <Paragraph>Hier können Sie ihre bestehende Registrierung zur Veranstaltung aufrufen und bearbeiten.</Paragraph>
            <Paragraph>
               Bitte geben sie die unten stehenden Informationen zu Ihrer Anmeldung an.
            </Paragraph>
            <Divider />
            <Validation Validator="@ValidateNotEmpty">
                <Field>
                    <FieldLabel>Anmeldungs ID</FieldLabel>
                    <TextEdit @bind-Text="userId" Placeholder="081542">
                        <Feedback>
                            <ValidationError>Dieses Feld darf nicht leer sein.</ValidationError>
                        </Feedback>
                    </TextEdit>

                </Field>
            </Validation>
            <Validation Validator="@ValidateNotEmpty">
                <Field>
                    <FieldLabel>E-Mail Adresse</FieldLabel>
                    <TextEdit @bind-Text="eMail" Placeholder="max@mustermann.de">
                        <Feedback>
                            <ValidationError>Dieses Feld darf nicht leer sein.</ValidationError>
                        </Feedback>
                    </TextEdit>
                </Field>
            </Validation>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Schließen</Button>
            <Button Color="Color.Primary" @bind-Loading="isButtonLoading" Clicked="@GetMyRegistration">Anmeldung aufrufen</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {

    string userId;
    string eMail;

    private async Task GetMyRegistration()
    {
        //Loading Button
        isButtonLoading = true;

        
    } 

    //Model References
    private Modal accountLookupRef;
    private bool isButtonLoading = false;

    public void ShowModal()
    {
        accountLookupRef.Show();
    }

    private void HideModal()
    {
        accountLookupRef.Hide();
    }

    void ValidateNotEmpty(ValidatorEventArgs e)
    {
        e.Status = Convert.ToString(e.Value)?.Length >= 1 ? ValidationStatus.Success : ValidationStatus.Error;
    }




}